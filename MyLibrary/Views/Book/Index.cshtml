@using Microsoft.AspNetCore.Identity
@model IEnumerable<MyLibrary.Models.ViewModels.BookAuthorViewModel>
@{
    ViewData["Title"] = "Home Page";
    Layout = "_Layout";
}
@if (User.Identity.IsAuthenticated) {
    <p>
        <a asp-action="Create" class="btn btn-success">Добавить издание</a>
    </p>
}
@using (Html.BeginForm())
{
    <p class="container row">
        <input type="search" class="form-control col-6 m-2 p-1" name="SearchString" placeholder="Искать издание..." style="font-family: Menlo,serif">
        <button type="submit" class="btn btn-success form-control col-auto m-2" style="width: 50px"><svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-search" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                                        <path fill-rule="evenodd" d="M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z"/>
                                                        <path fill-rule="evenodd" d="M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z"/>
                                                      </svg></button>
    </p>
}
<div class="container">
    <div class="shopping-grid">
        <div class="container">
            <div class="row">
                @foreach (var item in Model.OrderByDescending(item => item.Rating)) {
                    <div class="col-md-3 col-sm-6">
                        <div class="product-grid7">
                            <div class="product-image7">
                                <a href="#">
                                    <img class="card-img img-fluid shadow-lg " style="height: 367px; object-fit: cover;" src="@item.Image">
                                </a>
                            </div>
                            <div class="col-auto text-center">
                                <h5 style="font-family: Roboto;">
                                    <a> @item.Name<br></a>
                                    <a> @item.Author</a>
                                </h5>
                                <div>
                                    @for (int i = 0; i < item.Rating; i++) {
                                        <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-star-fill" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                          <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
                                        </svg>
                                    }
                                </div>
                                <div>
                                    @item.Cost &#8372;
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


@* <table class="table"> *@
@*     <thead> *@
@*         <tr> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.Name) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.ISBN) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.Publisher) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.BookType) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.Language) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.Cost) *@
@*             </th> *@
@*             <th>Authors</th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.Author) *@
@*             </th> *@
@*             <th></th> *@
@*              *@
@*         </tr> *@
@*     </thead> *@
@*     <tbody> *@
@* @foreach (var item in Model.OrderBy(f=>f.Name).ThenBy(s=>s.Author)) { *@
@*     <tr> *@
@*          *@
@*         <td> *@
@*             <img src="@item.Image" alt="Sorry" class="img-fluid card-img shadow-lg"> *@
@*         </td> *@
@*         <td> *@
@*             @Html.DisplayFor(modelItem => item.Name) *@
@*         </td> *@
@*         <td> *@
@*             @Html.DisplayFor(modelItem => item.ISBN) *@
@*         </td> *@
@*         <td> *@
@*             @Html.DisplayFor(modelItem => item.Publisher) *@
@*         </td> *@
@*         <td> *@
@*             @Html.DisplayFor(modelItem => item.BookType) *@
@*         </td> *@
@*         <td> *@
@*             @Html.DisplayFor(modelItem => item.Language) *@
@*         </td> *@
@*         <td> *@
@*             @Html.DisplayFor(modelItem => item.Cost) *@
@*         </td *@
@*         > *@
@*         <td> *@
@*             @Html.DisplayFor(modelItem => item.Author) *@
@*         </td> *@
@* *@
@*         <td> *@
@*             <a asp-action="Edit" asp-route-id="@item.BookId">Edit</a> | *@
@*             <a asp-action="Details" asp-route-id="@item.BookId">Details</a> | *@
@*             <a asp-action="Delete" asp-route-id="@item.BookId">Delete</a> *@
@*         </td> *@
@*     </tr> *@
@* } *@
@*     </tbody> *@
@* </table> *@